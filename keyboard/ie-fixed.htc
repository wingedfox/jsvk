//
<public:component lightWeight="true"> 
<public:method name="getAbsPos" />
<public:attach event="ondocumentready" onevent="init()" />
<script language="jscript">
//<![CDATA[
/**
 * fixed.htc
 * Copyright (C) 2006  Ilya Lebedev <ilya@lebedev.net>
 * This program is licensed under the LGPL. http://www.gnu.org/licenses/lesser
 * 
 *******************************************************************************/

var canvas = element.document.compatMode=='CSS1Compat'? element.document.documentElement : element.document.body;
/*
*  return absolute coordinate for specified property
*
*  @param {String} left, right, top, bottom
*  @return {String} coordinate for the 'style'
*  @access private
*/
function getAbsPos(prop) {
  return parseInt(element.style[prop])+canvas[{'top':'scrollTop','bottom':'scrollTop','left':'scrollLeft','right':'scrollLeft'}[prop]]+'px';
};
/*
*  Event handler for 'onpropertychange'
*
*
*
*
*/
function doPropChange(e) {
  switch (e.propertyName) {
    case 'style.position':
      switch (element.style.position) {
        case 'absolute' :
        case 'relative' :
        case 'static'   :
          element.runtimeStyle.position = element.style.position;
          element.runtimeStyle.removeExpression( 'top' );
          element.runtimeStyle.removeExpression( 'left' );
          element.runtimeStyle.removeExpression( 'right' );
          element.runtimeStyle.removeExpression( 'bottom' );
          element.runtimeStyle.top = parseInt( element.style.top || element.currentStyle.top ) + 'px' ;
          break;
        case 'fixed' :
          element.runtimeStyle.position = 'absolute';
          element.runtimeStyle.setExpression('top' ,'getAbsPos("top")');
          element.runtimeStyle.setExpression('left' ,'getAbsPos("left")');
          element.runtimeStyle.setExpression('right' ,'getAbsPos("right")');
          element.runtimeStyle.setExpression('bottom' ,'getAbsPos("bottom")');
      }
      break;
  }
};
function init() {
  /*
  *  save defaults...
  */
  element.style.top = element.currentStyle.top;
  element.style.left = element.currentStyle.left;
  element.style.right = element.currentStyle.right;
  element.style.bottom = element.currentStyle.bottom;

  element.attachEvent( 'onpropertychange', doPropChange );

  if ( element.currentStyle.position == 'fixed' ) {
    /*
    *  force initialization
    */
    element.style.position = 'fixed';
  }
};

//]]>
</script>
</public:component>